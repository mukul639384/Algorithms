Qus link : https://practice.geeksforgeeks.org/problems/steps-by-knight/0

#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define f first
#define s second
int r[]={2,2,-2,-2,1,-1,1,-1};
int c[]={1,-1,1,-1,2,2,-2,-2};
int main()
 {
	//code
	ll t;
	cin>>t;
	while(t--){
	   int n;
	   cin>>n;
	   int s1,s2;
	   cin>>s1>>s2;
	   s1--;
	   s2--;
	   int d1,d2;
	   cin>>d1>>d2;
	   d1--;
	   d2--;
	   queue<pair<int,int>> q;
	   q.push(make_pair(s1,s2));
	   q.push(make_pair(-1,-1));
	   int l=0;
	   vector<vector<bool>> vis(n, vector<bool>(n, false));
	   vis[s1][s2]=true;
	   while(q.size()>1){
	       pair<int,int> p=q.front();
	       q.pop();
	       if(p.f==d1 && p.s==d2){
	           break;
	       }
	       if(p.f==-1 && p.s==-1){
	           l++;
	           q.push(make_pair(-1,-1));
	           continue;
	       }
	       //l++;
	       for(int i=0;i<8;i++){
	           int x1 = p.f + r[i];
	           int x2 = p.s + c[i];
	           if(x1>=0 && x1<n && x2>=0 && x2<n && !vis[x1][x2]){
	               vis[x1][x2]=true;
	               q.push(make_pair(x1,x2));
	           }
	       }
	   }
	   cout<<l<<"\n";
	}
	return 0;
}
